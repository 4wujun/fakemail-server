#!groovy

buildscript {
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath 'org.hibernate:hibernate-gradle-plugin:5.2.10.Final'
	}
}

plugins {
	id 'com.bmuschko.tomcat' version '2.3'
	id 'net.saliman.cobertura' version '2.5.0'
	id 'org.liquibase.gradle' version '1.2.4'
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'
//apply plugin: 'application'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'jdepend'
apply plugin: 'org.hibernate.orm'

group = 'org.legurun.test'
version = '0.1.1-SNAPSHOT'
description = """Fakemail server aims to act as a "blackhole" mail server.
	Each mail send to Fakemail is stored into database and never forwarded to legitimate recipients.
	Those mails can be displayed on a web interface.
	The main use is for testing software which sends mail, to forbid sending to real users."""

sourceCompatibility = 1.8

ext {
	springVersion = '4.3.10.RELEASE'
	hibernateVersion = '5.2.10.Final'
	tomcatVersion = '8.5.16'
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

//mainClassName = 'org.legurun.test.fakemailserver.Main'

repositories {
	mavenCentral()
}

dependencies {
	compile "org.springframework:spring-context:$springVersion", {
		exclude(module: "commons-logging")
	}
	compile "org.springframework:spring-webmvc:$springVersion"
	compile "org.springframework:spring-orm:$springVersion"
	compile "org.springframework:spring-jdbc:$springVersion"
	compile "org.springframework:spring-aop:$springVersion"
	compile "org.springframework:spring-context-support:$springVersion"
	compile "org.springframework:spring-aspects:$springVersion"
	compile "com.fasterxml.jackson.core:jackson-databind:2.9.0"
	compile "org.slf4j:slf4j-api:1.7.25"
	compile "javax.servlet:jstl:1.2"
	compile "org.glassfish.web:el-impl:2.2"
	compile "javax.mail:mail:1.4.7"
	compile "org.subethamail:subethasmtp:3.1.7"
	compile "org.hibernate:hibernate-core:$hibernateVersion"
	compile "org.hibernate:hibernate-entitymanager:$hibernateVersion"
	compile "org.hibernate:hibernate-jcache:$hibernateVersion"
	compile "org.ehcache:ehcache:3.3.1"
	compile "javax.cache:cache-api:1.0.0"
	compile "javax.validation:validation-api:2.0.0.Final"
	compile "org.hibernate.validator:hibernate-validator:6.0.1.Final"
	compile "net.bull.javamelody:javamelody-core:1.68.1"
	compile "org.apache.commons:commons-dbcp2:2.1.1"
	compile "commons-io:commons-io:2.5"
	compile "org.aspectj:aspectjweaver:1.8.10"
	compile "org.liquibase:liquibase-core:3.5.3"
	compile "org.liquibase.ext:liquibase-hibernate5:3.6"
	compile "org.liquibase.ext:liquibase-javalogger:3.0"
	compile "org.webjars:bootstrap:3.3.7-1"
	compile "org.webjars:jquery:3.2.1"
	compile "org.webjars:bootstrap-table:1.9.1-1"
	compile "org.webjars:jquery-dateFormat:1.0.2-1"
	compile "org.webjars:bootstrap-notify:3.1.3-1"
	compile "org.webjars:bootstrap-datetimepicker:2.4.2"
	compile "org.webjars:webjars-locator:0.32-1"
	runtime "org.slf4j:jcl-over-slf4j:1.7.25"
	runtime "org.slf4j:slf4j-log4j12:1.7.25"
	runtime "log4j:log4j:1.2.17"
	runtime "com.h2database:h2:1.4.196"
	runtime "org.mariadb.jdbc:mariadb-java-client:2.1.0"
	testCompile "junit:junit:4.12"
	testCompile "org.springframework:spring-test:$springVersion"
	testCompile "org.mockito:mockito-core:2.8.47"
	testCompile "org.hamcrest:hamcrest-all:1.3"
	testCompile "com.jayway.jsonpath:json-path:2.4.0"
	testCompile "com.jayway.jsonpath:json-path-assert:2.4.0"
	providedCompile "javax.servlet:javax.servlet-api:3.1.0"
	providedCompile "javax.servlet.jsp:javax.servlet.jsp-api:2.3.1"
	providedCompile "javax.el:javax.el-api:3.0.0"
	providedCompile "com.google.code.findbugs:annotations:3.0.1u2"

	tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}"
	tomcat "org.apache.tomcat.embed:tomcat-embed-logging-juli:8.5.2"
	tomcat "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

task('runH2', type: com.bmuschko.gradle.tomcat.tasks.TomcatRun) {
	doFirst {
		System.setProperty('externalConfigurationLocation', 'src/main/config/application-h2.properties')
	}
}

task('runMysql', type: com.bmuschko.gradle.tomcat.tasks.TomcatRun) {
	doFirst {
		System.setProperty('externalConfigurationLocation', 'src/main/config/application-mysql.properties')
	}
}

tomcat {
	httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
	ajpProtocol  = 'org.apache.coyote.ajp.AjpNio2Protocol'
}

hibernate {
	enhance {
		enableLazyInitialization = true
		enableDirtyTracking = true
		enableAssociationManagement = true
	}
}

checkstyle {
	configFile = file("${project.rootDir}/src/config/check_style.xml")
	ignoreFailures = true
	sourceSets = [project.sourceSets.main]
}

pmd {
	ruleSetFiles = files("${project.rootDir}/src/config/pmd.xml")
	ignoreFailures = true
	sourceSets = [project.sourceSets.main]
}

findbugs {
	excludeFilter = file("${project.rootDir}/src/config/findbugsExcludeFilter.xml")
	ignoreFailures = true
	sourceSets = [project.sourceSets.main]
}

jdepend {
	sourceSets = [project.sourceSets.main]
}

cobertura {
	coverageFormats = ['html', 'xml']
}
check.dependsOn coberturaReport

/*
run {
	jvmArgs += "-DexternalConfigurationLocation=src/main/config/application-h2.properties"
}
*/
war {
	baseName = 'fakemailserver'
	manifest {
		attributes('Implementation-Title': project.name,
				'Implementation-Version': version,
				'Built-By': System.getProperty('user.name'),
				'Built-Date': new Date(),
				'Built-JDK': System.getProperty('java.version'),
				'Built-Gradle': gradle.gradleVersion,
				'Class-Path': configurations.runtime.files.collect { it.name }.join(' ')
		)
	}
}
/*
liquibase {
	activities {
		main {
			changeLogFile = "${projectDir}/src/main/resources/liquibase/changelog-master.xml"
			url 'jdbc:mysql://localhost:3306/fakemail_ref?nullNamePatternMatchesAll=true'
			username
			password
			//src/main/resources/liquibase/liquibase.properties
		}
	}
}
*/